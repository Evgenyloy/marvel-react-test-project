{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage"],"mappings":"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","file":"static/js/4.6a3fdf1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'content-Type': 'aplication/json' }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n\r\nexport default useHttp;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\r\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}