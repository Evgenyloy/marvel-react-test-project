{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","clazz","includes","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","onCharSelected","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","arr","index","imgStyle","renderItems","disable","toString","Skeleton","item","i","CharInfo","charId","skeleton","ErrorBoudary","state","errorInfo","console","log","this","setState","props","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.cc21157a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'content-Type': 'aplication/json' }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n\r\nexport default useHttp;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\r\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\nimport './randomChar.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 600000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const onTryClick = () => {\n    updateChar();\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  const spinner = loading ? <Spinner /> : null;\n\n  const content = !(loading || error) ? <View char={char} /> : null;\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\">\n          <div className=\"inner\" onClick={onTryClick}>\n            try it\n          </div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  let clazz;\n  if (thumbnail?.includes('image_not_available')) {\n    clazz = 'randomchar__img1';\n  } else {\n    clazz = 'randomchar__img';\n  }\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className={clazz} />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description ? description : 'not description'}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst CharList = ({ onCharSelected }) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const renderItems = (arr) => {\n    const items = arr.map(({ name, thumbnail, id }, index) => {\n      let imgStyle = { objectFit: 'cover' };\n      if (\n        thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n      ) {\n        imgStyle = { objectFit: 'unset' };\n      }\n\n      return (\n        <li className=\"char__item\" key={id} onClick={() => onCharSelected(id)}>\n          <img src={thumbnail} alt=\"abyss\" style={imgStyle} />\n          <div className=\"char__name\">{name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  };\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disable={newItemLoading.toString()}\n        style={{ display: charEnded ? 'none' : 'block' }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = ({ charId }) => {\n  const [char, setChar] = useState();\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  useEffect(() => {\n    updateChar();\n  }, [charId]);\n\n  const updateChar = () => {\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let imgStyle = { objectFit: 'cover' };\n  if (\n    thumbnail ===\n    'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n  ) {\n    imgStyle = { objectFit: 'contain' };\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'there is no comics with this character'}\n        {comics.map((item, i) => {\n          if (i > 9) return null;\n          return (\n            <li className=\"char__comics-item\" key={i}>\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\nexport default CharInfo;\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoudary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { error: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoudary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoudary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoudary>\r\n        <RandomChar />\r\n      </ErrorBoudary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoudary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoudary>\r\n\r\n        <ErrorBoudary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoudary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}